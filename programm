import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.DecimalFormat;
import java.util.*;

public class test {

    private static final String[] Dozens = {
            "",
            " ten",
            " twenty",
            " thirty",
            " forty",
            " fifty",
            " sixty",
            " seventy",
            " eighty",
            " ninety"
    };

    private static final String[] Units = {
            "",
            " one",
            " two",
            " three",
            " four",
            " five",
            " six",
            " seven",
            " eight",
            " nine",
            " ten",
            " eleven",
            " twelve",
            " thirteen",
            " fourteen",
            " fifteen",
            " sixteen",
            " seventeen",
            " eighteen",
            " nineteen"
    };
    private static final HashMap<String, String> map = new HashMap<>();


    private static String convertLessThousand(int number) {
        String newNum;

        if (number % 100 < 20){
            newNum = Units[number % 100];
            number /= 100;
        }
        else {
            newNum = Units[number % 10];
            number /= 10;

            newNum = Dozens[number % 10] + newNum;
            number /= 10;
        }
        if (number == 0) return newNum;
        return Units[number] + " hundred" + newNum;
    }
    public static String convert(long number) {
        if (number == 0) { return "zero"; }

        String longNumber = Long.toString(number);

        String mask = "000000000000";
        DecimalFormat df = new DecimalFormat(mask);
        longNumber = df.format(number);

        // XXXnnnnnnnnn
        int billions = Integer.parseInt(longNumber.substring(0,3));
        // nnnXXXnnnnnn
        int millions  = Integer.parseInt(longNumber.substring(3,6));
        // nnnnnnXXXnnn
        int moreThousands = Integer.parseInt(longNumber.substring(6,9));
        // nnnnnnnnnXXX
        int thousands = Integer.parseInt(longNumber.substring(9,12));

        String replacedBillions;
        switch (billions) {
            case 0:
                replacedBillions = "";
                break;
            case 1 :
                replacedBillions = convertLessThousand(billions)
                        + " billion ";
                break;
            default :
                replacedBillions = convertLessThousand(billions)
                        + " billion ";
        }
        String result =  replacedBillions;

        String replaceMillions;
        switch (millions) {
            case 0:
                replaceMillions = "";
                break;
            case 1 :
                replaceMillions = convertLessThousand(millions)
                        + " million ";
                break;
            default :
                replaceMillions = convertLessThousand(millions)
                        + " million ";
        }
        result =  result + replaceMillions;

        String replaceMoreThousands;
        switch (moreThousands) {
            case 0:
                replaceMoreThousands = "";
                break;
            case 1 :
                replaceMoreThousands = "one thousand ";
                break;
            default :
                replaceMoreThousands = convertLessThousand(moreThousands)
                        + " thousand ";
        }
        result =  result + replaceMoreThousands;

        String replaceThousand;
        replaceThousand = convertLessThousand(thousands);
        result =  result + replaceThousand;

        return result.replaceAll("^\\s+", "").replaceAll("\\b\\s{2,}\\b", " ");
    }

    public static Integer convertToWords(String str) {

        String Count = "";
        //String[] words = str.split(" ");
        String[] words = (str.split(" "));
        List<String> newStr = new ArrayList<>(Arrays.asList(words));
        Set<String> keys = map.keySet();
        for (String word : newStr) {
            for (String key : keys) {
                if (word.equalsIgnoreCase(key)) {
                    //System.out.println(word);
                    newStr.set(newStr.indexOf(word), map.get(word));
                }
            }
        }
        Integer a = 1;
        for (int i = 0; i < newStr.size(); i++) {
            try {
                int k = Integer.parseInt(newStr.get(i));
            } catch (NumberFormatException nfe) {
                newStr.remove(i);
            }
        }

        for (int i = 0; i < newStr.size() - 1; i++) {
            Count = Count.concat(newStr.get(i));
        }
        /*for (int i=0;i<newStr.size();i++)
        {
            Count=Count.concat(newStr.get(i));
        }*/
        System.out.println(Count);


        words = newStr.toArray(new String[newStr.size()]);
        System.out.println(Arrays.toString(words));

        int Number = Integer.parseInt(Count);
        return Number;
    }
    public static void main(String[] args) throws IOException {

        //map.put("zero","0");
        map.put("one","1");
        map.put("two","2");
        map.put("three","3");
        map.put("four","4");
        map.put("five","5");
        map.put("six","6");
        map.put("seven","7");
        map.put("eight","8");
        map.put("nine","9");
        map.put("ten","10");
        map.put("eleven","11");
        map.put("twelve","12");
        map.put("thirteen","13");
        map.put("fourteen","14");
        map.put("fifteen","15");
        map.put("sixteen","16");
        map.put("seventeen","17");
        map.put("eighteen","18");
        map.put("twenty","20");
        map.put("thirty","30");
        map.put("forty","40");
        map.put("fifty","50");
        map.put("sixty","60");
        map.put("seventy","70");
        map.put("eighty","80");
        map.put("ninety","90");







        Scanner in = new Scanner(System.in);
        System.out.print("Input a number: ");


        System.out.println("Введите 1 для ввода числа, введите 2 для ввода числа прописьсю.");
        int count = in.nextInt();
        if (count==1)
        {
            System.out.println("Введите число до 12 знаков");
            long newCount = in.nextInt();
            System.out.println(convert(newCount));

        }

        if (count==2)
        {
            System.out.println("Введите число прописью");
            System.out.println("Пример: two billion one hundred forty seven millions four hundred eighty three thousand six hundred forty seven");
            BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
            String newString = reader.readLine();
            System.out.println(convertToWords(newString));
        }






    }
}
